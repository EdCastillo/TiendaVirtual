@model dynamic 
@{
    #region CookiesConfiguration_4.0_TotalCompraVariable
    List<Views.UnifiedModels.ProductoCarritoUnifiedModel> listModel = new List<Views.UnifiedModels.ProductoCarritoUnifiedModel>();
    //Cookies Configuration 4.0
    Views.Models.UserCookie user = new Views.Models.UserCookie();
    CreateOrValidate();
    void CreateOrValidate()
    {
        HttpCookie comp = Request.Cookies["UserCookie"];
        if (comp == null)
        {
            //Crear cookies si no existen
            HttpCookie UserCookie = new HttpCookie("UserCookie");
            UserCookie["US_ID"] = "0";
            UserCookie["Username"] = "Invitado";
            UserCookie["JsonToken"] = "NotValid";
            UserCookie["ListProduct"] = "null";
            UserCookie.Expires.AddHours(5);
            Response.Cookies.Add(UserCookie);


            //cargar cookies existentes
            HttpCookie reqCookies = Request.Cookies["UserCookie"];
            user = new Views.Models.UserCookie();
            user.Username = reqCookies["Username"].ToString();
            user.US_ID = Int32.Parse(reqCookies["US_ID"].ToString());
            user.JsonToken = reqCookies["JsonToken"].ToString();
            if (!reqCookies["ListProduct"].ToString().Equals("null"))
            {
                List<Views.Models.Producto_Carrito> list = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Views.Models.Producto_Carrito>>(reqCookies["ListProduct"].ToString());
                user.Products = list;
            }
            else
            {
                user.Products = new List<Views.Models.Producto_Carrito>();
            }
        }
        else
        {
            //cargar cookies existentes
            HttpCookie reqCookies = Request.Cookies["UserCookie"];
            user = new Views.Models.UserCookie();
            user.Username = reqCookies["Username"].ToString();
            user.US_ID = Int32.Parse(reqCookies["US_ID"].ToString());
            user.JsonToken = reqCookies["JsonToken"].ToString();
            //Variable
            listModel = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Views.UnifiedModels.ProductoCarritoUnifiedModel>>(reqCookies["TotalDeCompra"].ToString());
            //--
            if (!reqCookies["ListProduct"].ToString().Equals("null"))
            {
                List<Views.Models.Producto_Carrito> list = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Views.Models.Producto_Carrito>>(reqCookies["ListProduct"].ToString());
                user.Products = list;
            }
            else
            {
                user.Products = new List<Views.Models.Producto_Carrito>();
            }
        }
    }
    #endregion
    ViewBag.Title = "CapturarCompra";
    Views.Models.Compra compra = new Views.Models.Compra {PayPal_PayerID=Model.PayerId, PayPal_Token=Model.token,US_ID=user.US_ID,COM_LUGAR_DE_ENVIO="Alajuela",COM_FECHA_COMPRA=DateTime.Now,COM_ID=0 };

    int COM_ID=System.Threading.Tasks.Task.Run(() => setCompra()).Result;
    async System.Threading.Tasks.Task<int> setCompra() {
        Views.Managers.CompraManager manager = new Views.Managers.CompraManager();
        var id=await manager.Insertar(compra, user.JsonToken);
        return id;
    }
    Views.Managers.PCManager pCManager = new Views.Managers.PCManager();
    System.Threading.Tasks.Task.Run(() => insertPCS());
    async System.Threading.Tasks.Task insertPCS() {
        foreach (var item in listModel)
        {
            await pCManager.Insertar(new Views.Models.Producto_Compra { COM_ID = COM_ID, CM_PRECIO_PRODUCTO_UNIDAD = (int)item.producto.PRO_PRECIO, COM_PRO_CANTIDAD = item.CAR_PRO_CANTIDAD, PRO_ID = item.producto.PRO_ID }, user.JsonToken);
        }
    }
    HttpCookie tempCookie = Request.Cookies["UserCookie"];
    tempCookie["ListProduct"] = "null";
    Response.Cookies.Add(tempCookie);
    System.Threading.Tasks.Task.Run(()=>borrarCarritoByUserID());

    async System.Threading.Tasks.Task borrarCarritoByUserID() {
        Views.Managers.CarritoManager carritoManager = new Views.Managers.CarritoManager();
        await carritoManager.DeleteAllByUserId(user.US_ID.ToString(),user.JsonToken);
    }
}
<script>
    window.location.href = '/Usuario/Compra/VerCompra?id=@COM_ID&token=@user.JsonToken';
</script>

